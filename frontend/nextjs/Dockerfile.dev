# Build stage
FROM node:18.17.0-alpine AS builder

# Set memory limits for the build process
ENV NODE_OPTIONS="--max-old-space-size=512"

# Set the working directory
WORKDIR /app

# Copy package files
COPY package.json ./
COPY package-lock.json* ./

# Install all dependencies (including dev) since we're in development mode
# but use memory optimization flags
RUN npm install --legacy-peer-deps --no-fund --loglevel=error

# Copy application files
COPY next.config.mjs ./
COPY public ./public
COPY app ./app
COPY components ./components
COPY styles ./styles
COPY utils ./utils
COPY actions ./actions
COPY config ./config
COPY helpers ./helpers
COPY hooks ./hooks
COPY types ./types
COPY tailwind.config.ts ./
COPY postcss.config.mjs ./
COPY tsconfig.json ./

# Runtime stage - smaller image
FROM node:18.17.0-alpine

# Set environment variables
ENV NODE_ENV=development
ENV PORT=3000
ENV NODE_OPTIONS="--max-old-space-size=512"
ENV NEXT_TELEMETRY_DISABLED="1"

# Set default values for missing environment variables
ENV NEXT_PUBLIC_GA_MEASUREMENT_ID=""
ENV DISCORD_BOT_TOKEN=""
ENV DISCORD_CLIENT_ID=""

# Set the working directory
WORKDIR /app

# Copy from builder stage
COPY --from=builder /app ./

# Expose the port
EXPOSE 3000

# Start the development server
CMD ["npm", "run", "dev"]